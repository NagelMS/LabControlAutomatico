% Identificación del sistema

% Cargando workspace
load('pamhws.mat');

% Cargando archivo csv
pamh = readtable('PAMH_steppert.csv');

% Guardando en matrices los atributos de pamh
tiempo = pamh.Tiempo;
angulo = pamh.ANGULO;
entrada = pamh.ESTIMULO;

% Gráfica de experimento completo
% figure;
% plot(tiempo,angulo,'LineWidth',1.5,'Color',[0.4 0.4 1],'LineStyle','-');
% hold on;
% plot(tiempo,entrada,'LineWidth',2,'Color',[0.8 0 0.4])
% xlim([0 64])
% ylim([-0.5 2])
% title('Medición experimental del sistema PAMH','FontSize',14)
% xlabel('Tiempo (s)','FontSize',14)
% ylabel('Angulo (rad)','FontSize',14)
% grid on;
% grid minor;
% hold off;
% hold off;

% Tiempo de muestreo
deltaT = tiempo(2) - tiempo(1);
% 
% Abriendo la sesión del identificador de sistemas
% ident('pamhIdent.sid','.');
% 
% Obteniendo los valores del sistema
zeta = P2DU.Zeta;
wn = P2DU.Tw;
kp = P2DU.Kp;

% Generación del sistema
s = tf('s');
model = (kp)/(1+2*zeta*wn*s+(wn*s)^2);
model = zpk(model);

%Respuesta del modelo ante el estimulo
y = lsim(model,entrada,tiempo);

% Gráfica de la respuesta experimental y del modelo
% figure;
% plot(tiempo,y,'LineWidth',1.5,'Color',[0.8 0.2 0.9],'LineStyle','-');
% hold on;
% plot(tiempo,entrada,'LineWidth',2,'Color',[0.8 0 0.4])
% xlim([0 64])
% ylim([-0.7 2])
% title('Respuesta del sistema modelado','FontSize',14)
% xlabel('Tiempo (s)','FontSize',14)
% ylabel('Amplitud','FontSize',14)
% legend('Angulo Modelado (rad)','Entrada')
% grid on;
% grid minor;
% hold off;
% hold off;

%% Espacio de Estados

A = [0 1; -15.33 -0.2673];
B = [0; 5.3881];
C = [1 0];

sysFCC = ss(A,B,C,0);

rank([A B; -C 0])

As = [A [0;0]; -C 0];
Bs = [B;0];

P = [-1+0.5i -1-0.5i -5]

Ks = acker(As,Bs,P);

modelcomp = canon(model,'companion')